#!/usr/bin/python

import os
import platform

Import('env')

bin_name = 'itex-demo-manager'


src_dir = Dir('.').abspath

#===============================================================================
sources = [
            Glob(os.path.join(src_dir, '', '*.cpp')),
          ]
          
libs = [
         'boost_regex',
         'boost_system',
         'boost_thread',
         #'boost_random',
         'boost_filesystem',
         #'boost_date_time',
         'boost_coroutine',
         'boost_context',
         'pq',
         'http_parser',
         'pthread',
         'cityhash',
         'aux',
         'sqldb',
         'http',
         'quant',
         #'cgate',
         #'cgatepp',
         'mgl',
       ]

inits = [
            Glob(os.path.join(src_dir, 'init*.sql')),
            Glob(os.path.join(src_dir, 'init*.sh')),
       ]

etcs = [
            'demo-manager.cfg'
       ]

local_env = env.Clone()
#===============================================================================
# Uncomment the line below to enable Boost.Asio debug logging of async events
#local_env['CCFLAGS'].append(['-DBOOST_ASIO_ENABLE_HANDLER_TRACKING', '-Wno-unused-variable', '-Wno-unused-result'])
#===============================================================================

if not platform.platform().startswith('Darwin'):
    libs.append(['tcmalloc'])
    local_env['CCFLAGS'].append(['-fno-builtin-malloc', '-fno-builtin-calloc', '-fno-builtin-realloc', '-fno-builtin-free'])


#==================================== Build ===========================================
itex_manager = local_env.Program(bin_name, sources, LIBS = libs)
local_env.Install(os.path.join(env['STAGE_DIR'], 'bin'), itex_manager)
local_env.Install(os.path.join(env['STAGE_DIR'], 'etc'), etcs)
local_env.Install(os.path.join(env['STAGE_DIR'], 'init'), inits)


additional_clean_paths = [
                               Glob(os.path.join(env['EXTERNALS_DIR'], 'lodepng', 'lodepng.o')),
                          ]
env.Clean(itex_manager, additional_clean_paths);



