#!/usr/bin/python

import os
import platform

Import('env')


src_dir = Dir('.').abspath


libs = [
         'boost_regex',
         'boost_system',
         'boost_thread',
         #'boost_random',
         #'boost_filesystem',
         #'boost_date_time',
         'boost_coroutine',
         'boost_context',
         'pq',
         'cityhash',
         'http_parser',
         'pthread',
         'gtest',
         'pthread',
         'sqldb',
         'aux'
       ]


local_env = env.Clone()
#===============================================================================
# Uncomment the line below to enable Boost.Asio debug logging of async events
#local_env['CCFLAGS'].append(['-DBOOST_ASIO_ENABLE_HANDLER_TRACKING', '-Wno-unused-variable', '-Wno-unused-result']);
#===============================================================================
if not platform.platform().startswith('Darwin'):
    libs.append(['tcmalloc'])
    local_env['CCFLAGS'].append(['-fno-builtin-malloc', '-fno-builtin-calloc', '-fno-builtin-realloc', '-fno-builtin-free'])


#==================================== Build ===========================================
boost_asio_async_query_service = local_env.Program('boost_asio_async_query_service', ['boost_asio_async_query_service.cpp'], LIBS = libs)
local_env.Install(os.path.join(env['STAGE_DIR'], 'bin'), boost_asio_async_query_service)

boost_asio_query_client = local_env.Program('boost_asio_query_client', ['boost_asio_query_client.cpp'], LIBS = libs)
local_env.Install(os.path.join(env['STAGE_DIR'], 'bin'), boost_asio_query_client)

sqldb_test = local_env.Program('sqldb_test', ['sqldb-test.cpp'], LIBS = libs)
local_env.Install(os.path.join(env['STAGE_DIR'], 'bin'), sqldb_test)

